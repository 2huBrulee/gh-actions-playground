name: Go

on:
  push: 
  workflow_dispatch:
    inputs:
      commit_sha:
        description: 'Commit SHA'
        required: true

env:
  AWS_REGION: us-east-1 
  ECR_REPOSITORY: testrepo 

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      workflow_sha: ${{ steps.step1.outputs.workflow_sha }}
    steps:
      - name: Set the SHA to checkout to
        id: step1
        run: |
          i_s=${{ github.event.inputs.commit_sha }}
          sha=${{ github.sha }}

          if [ -z $i_s ]; then
            workflow_sha=$sha
          else
            workflow_sha=$i_s
          fi

          echo $workflow_sha
          echo "::set-ouput name=workflow_sha::$workflow_sha" 

  build:
    needs: [prepare]
    runs-on: ubuntu-latest
    steps:
    - name: Check
      run: echo ${{ needs.prepare.outputs.workflow_sha }}
      
    - uses: actions/checkout@v3
      with:
        ref: ${{ needs.prepare.outputs.workflow_sha }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: refo
      run: echo ${{ github.ref_name }}

    - name: shawarma
      run: echo ${{ github.sha }}

    - name: tagos
      run: git tag --contains ${{ github.sha }}

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        IMAGE_TAG=${{ needs.prepare.outputs.workflow_sha }}
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
